{"version":3,"file":"static/js/902.571161eb.chunk.js","mappings":"0LACA,EAA+B,mCAA/B,EAA8E,gCAA9E,EAAqH,2BAArH,EAAwJ,4BAAxJ,EAAyL,yBAAzL,EAA6N,+BAA7N,EAAoQ,4BAApQ,EAA8S,kCAA9S,EAA2V,+BAA3V,EAAkY,4BAAlY,EAAsa,4BAAta,EAAod,sC,0FCApd,G,wCAA8B,6BAA9B,EAAmE,uBAAnE,EAAkG,sBAAlG,EAAgI,sBAAhI,EAAsK,8BAAtK,EAAiN,2BAAjN,EAA8P,gCAA9P,EAAwS,wBAAxS,EAAqU,mBAArU,EAA6V,mBAA7V,EAAmY,iCAAnY,EAAqb,+BAArb,EAA4e,sCAA5e,EAAwiB,oCAAxiB,EAA0lB,4BAA1lB,EAAyoB,iCAAzoB,EAAurB,2BAAvrB,EAA6tB,yBAA7tB,EAA8vB,sBAA9vB,EAA4xB,sBAA5xB,EAAo0B,gC,mBC2Jp0B,IAaA,GAAeA,EAAAA,EAAAA,KAbS,SAACC,GAAK,MAAM,CAClCC,SAASC,EAAAA,EAAAA,GAAeF,GACzB,IAE0B,SAACG,GAAQ,MAAM,CACxCC,oBAAqB,SAACC,GACpB,OAAOF,GAASG,EAAAA,EAAAA,IAAcD,GAChC,EACAE,mBAAoB,SAACC,GACnB,OAAOL,GAASM,EAAAA,EAAAA,IAAmBD,GACrC,EACD,GAED,EApJA,SAAe,GAMX,IALFE,EAAO,EAAPA,QACAT,EAAO,EAAPA,QACAU,EAAK,EAALA,MACAP,EAAmB,EAAnBA,oBACAG,EAAkB,EAAlBA,mBAEA,GAA8CK,EAAAA,EAAAA,WAAS,GAAM,eAAtDC,EAAe,KAAEC,EAAkB,KAE1C,OACE,SAAC,KAAM,CACLC,WAAY,CACVC,KAAM,YAERC,YAAY,EACZC,QAAQ,EACRC,QAAS,CAACC,EAAAA,GAAYC,EAAAA,GAAYC,EAAAA,IAClCC,OAAO,OACPC,UAAWC,EACXC,SAAU,CACRC,SAAS,EACTC,gBAAgB,EAChBC,YAAY,GAEdC,aAAcnB,EACdoB,YAAY,OAAM,SAEjB9B,EAAQ+B,KAAI,SAACC,GACZ,IAAIC,EAAeD,EAAGE,OAAOC,QAC7B,OACE,SAAC,KAAW,WACV,iBAAKZ,UAAWC,EAASjB,GAAI,QAAQ,WACnC,mBACEQ,KAAK,SACLqB,QAAS,SAACC,GAAK,OAAK5B,EAAQ4B,EAAM,EAClC9B,GAAG,oBACHgB,UAAWC,EAAc,UAEzB,SAACc,EAAA,EAAY,CAACC,KAAK,mBAErB,gBACEC,IAAKP,EAAaQ,IAClBC,MAAOT,EAAaS,MACpBC,OAAQV,EAAaU,OACrBC,IAAKZ,EAAGa,YACRtB,UAAWC,KAEb,iBAAKD,UAAWC,EAAgB,WAC9B,iBAAKD,UAAWC,EAAW,WACzB,kBACET,KAAK,WACLR,GAAG,QACHgC,KAAK,QACLhB,UAAS,UAAKC,EAAiB,KAC/BY,QAAS,SAACC,GAER,OADAS,QAAQC,IAAI,WAAYV,GACpBL,EAAGgB,MACE1C,EAAmB,CAAE2C,IAAKjB,EAAGiB,MAE/B9C,EAAoB,CAAE8C,IAAKjB,EAAGiB,KACvC,KAEF,kBACEC,QAAQ,QACR3B,UAAS,UAAKC,EAAO,aAAKQ,EAAGgB,MAAQxB,EAAU,MAAO,UAEtD,SAACc,EAAA,EAAY,CAACC,KAAK,qBAIvB,eAAIhB,UAAWC,EAAK,SAAEQ,EAAGa,eACzB,eAAItB,UAAWC,EAAK,SACjBZ,EAAkB,aAAe,iBAEnCA,GACC,iCACE,eAAIW,UAAWC,EAAiB,SAC7BQ,EAAGmB,eAAepB,KAAI,SAACqB,GAAI,OAC1B,gBAAI7B,UAAWC,EAAsB,WACnC,0BAAO4B,EAAKC,SACZ,4BACGC,OAAOF,EAAKG,UAAUC,QAAQ,GAAE,IAAGJ,EAAKK,WAHFC,EAAAA,EAAAA,MAKtC,OAIT,eAAInC,UAAWC,EAAc,SAC1B,kBAAIQ,EAAG2B,aAAU,OAAK3B,EAAG4B,eAAc7B,KAAI,SAACsB,GAAK,OAChD,eAAI9B,UAAWC,EAAmB,SAC/B6B,GADqCA,EAEnC,UAKX,eAAI9B,UAAWC,EAAmB,SAC/BQ,EAAG6B,eAAe9B,KAAI,SAACqB,GAAI,OAC1B,eAAI7B,UAAWC,EAAwB,SACpC4B,IAD0CM,EAAAA,EAAAA,MAExC,UAMb,iBAAKnC,UAAWC,EAAU,WACxB,oCAAUsC,KAAKC,MAAM/B,EAAGgC,UAAS,aACjC,oCAAUF,KAAKC,MAAM/B,EAAGiC,aAAY,UACpC,oCAAUjC,EAAGkC,YAAW,cACN,IAAjBlC,EAAGmC,WACF,oCAAUnC,EAAGmC,UAAS,WACpB,SAGN,iBAAK5C,UAAWC,EAAa,WAC3B,mBACET,KAAK,SACLQ,UAAWC,EACXY,QAAS,kBAAMvB,GAAoBD,EAAgB,EAAC,SAEnDA,EAAkB,mBAAqB,oBAE1C,eAAGwD,KAAMpC,EAAGqC,UAAW9C,UAAWC,EAAa,qBACpCQ,EAAGsC,kBA9FFZ,EAAAA,EAAAA,MAoGtB,KAGN,I,UC1JMa,EAAY,CAAC,YAAa,QAAS,SAAU,QAAS,W,yECC5D,IAAgB,YAAc,kCAAkC,OAAS,6BAA6B,KAAO,2BAA2B,IAAM,0BAA0B,QAAU,8BAA8B,QAAU,8BAA8B,MAAQ,4BAA4B,UAAY,gCAAgC,aAAe,mCAAmC,OAAS,6BAA6B,OAAS,6BAA6B,KAAO,2BAA2B,KAAO,2BAA2B,YAAc,kCAAkC,cAAgB,qC,4CC2BpkBC,I,QAAkB,CACtBC,KAAM,yCACNlD,UAAW,OACXmD,aAAa,EACbC,SAAU,IACVC,MAAO,CACLC,WAAY,8BAIDC,GAAAA,GAAAA,OAAkB,CAC/BC,OAAQ,CACNC,cAAeD,EAAAA,GACfE,kBAAmB,MAErBC,QAAS,CACPF,cAAeE,EAAAA,GACfD,kBAAmB,QAoHvB,IAUA,IAAenF,EAAAA,EAAAA,KAVS,SAACC,GAAK,MAAM,CAClCoF,aAAalF,EAAAA,EAAAA,GAAeF,GAC7B,IAE0B,SAACG,GAAQ,MAAM,CACxCkF,aAAc,SAAChF,GACb,OAAOF,GAASkF,EAAAA,GAAAA,IAAahF,GAC/B,EACD,GAED,EA1HA,SAAqB,GAAgD,IAA9CK,EAAO,EAAPA,QAAS2E,EAAY,EAAZA,aAAc1E,EAAK,EAALA,MAAOyE,EAAW,EAAXA,YACnD,GAAwBxE,EAAAA,EAAAA,UAAS,IAAG,eAA7B0E,EAAI,KAAEC,EAAO,KACpB,GAAwB3E,EAAAA,EAAAA,UAAS,CAAC,gBAAe,eAA1C4E,EAAI,KAAEC,EAAO,KAEdC,EAAe,SAACpD,GAGpB,GAFAA,EAAMqD,iBAEU,gBAAZH,EAAK,GAKT,GAAa,KAATF,EAAJ,CAKA,IAAIM,EAAgBC,KAAOP,GAAMQ,OAAO,MAExCT,EAAa,CACXnC,IAAKkC,EAAYzE,GAAOuC,IACxBoC,KAAMM,EACNJ,KAAMA,EAAK,GACXO,OAAQX,EAAYzE,IARtB,MAFEqF,KAASvB,IAAiBwB,iBAL1BD,KAASvB,IAAiBwB,WAiB9B,EAEA,OACE,SAAC,KAAM,CAACzE,UAAWC,GAAAA,OAAS,UAC1B,SAAC,KAAW,WACV,iBAAKD,UAAWC,GAAAA,YAAc,WAC5B,mBACET,KAAK,SACLqB,QAAS,SAACC,GAAK,OAAK5B,EAAQ4B,EAAM,EAClC9B,GAAG,mBACHgB,UAAWC,GAAAA,YAAc,UAEzB,SAACc,EAAA,EAAY,CAACC,KAAK,mBAErB,kBAAMhB,UAAWC,GAAAA,KAAQyE,SAAU,SAACC,GAAC,OAAKT,EAAaS,EAAE,EAAC,WACxD,iBAAK3E,UAAWC,GAAAA,QAAU,WACxB,kBAAO0B,QAAQ,OAAO3B,UAAWC,GAAAA,MAAQ,oBAIzC,SAAC2E,GAAA,EAAoB,CAACC,YAAaC,GAAAA,EAAe,UAChD,SAACC,GAAA,EAAG,CAAC/E,UAAWC,GAAAA,KAAO,UACrB,SAAC+E,GAAA,EAAU,CACTlD,MAAM,eACNmD,MAAOnB,EACPoB,SAAU,SAACC,GACTpB,EAAQoB,EACV,EACAnF,UAAWC,GAAAA,WACXmF,YAAa,gBAAGC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAAYC,EAAU,EAAVA,WAAU,OAC9C,UAACR,GAAA,EAAG,CACF/E,UAAWC,GAAAA,KACXuF,GAAI,CACFC,QAAS,OACTC,WAAY,UACZ,WAEF,kCACEC,IAAKN,GACDC,GAAU,IACdtF,UAAWC,GAAAA,UACX2F,UAAQ,EACR5G,GAAG,UAEM,OAAVuG,QAAU,IAAVA,OAAU,EAAVA,EAAYM,eACT,YAOhB,iBAAK7F,UAAWC,GAAAA,QAAU,WACxB,kBAAO0B,QAAQ,OAAO3B,UAAWC,GAAAA,MAAQ,oBAGzC,iBAAKD,UAAWC,GAAAA,aAAe,WAC7B,eAAID,UAAWC,GAAAA,UAAY,SAAE+D,KAC7B,mBACE8B,UAAQ,EACRb,MAAOjB,EACPhD,KAAK,OACLhC,GAAG,OACHkG,SAAU,SAACpE,GAAK,OAAKmD,EAAQ,CAACnD,EAAMiF,OAAOd,OAAO,EAClDjF,UAAWC,GAAAA,OAAS,SAEnB+C,EAAUxC,KAAI,SAACC,GAAE,OAChB,mBAAQT,UAAWC,GAAAA,OAAmBe,KAAMP,EAAIwE,MAAOxE,EAAG,SACvDA,GAD+BA,EAEzB,aAKjB,mBACEI,QAAS,SAAC8D,GAAC,OAAKT,EAAaS,EAAE,EAC/B3E,UAAWC,GAAAA,cAAgB,0BASzC,ICHA,IAgBA,IAAe1B,EAAAA,EAAAA,KAhBS,SAACC,GAAK,MAAM,CAClCoF,aAAalF,EAAAA,EAAAA,GAAeF,GAC7B,IAE0B,SAACG,GAAQ,MAAM,CACxCC,oBAAqB,SAACC,GACpB,OAAOF,GAASG,EAAAA,EAAAA,IAAcD,GAChC,EACAE,mBAAoB,SAACC,GACnB,OAAOL,GAASM,EAAAA,EAAAA,IAAmBD,GACrC,EACAgH,cAAe,WACb,OAAOrH,GAASqH,EAAAA,EAAAA,KAClB,EACD,GAED,EAxJA,SAAqB,GAKjB,IAJFpC,EAAW,EAAXA,YACAhF,EAAmB,EAAnBA,oBACAG,EAAkB,EAAlBA,mBACAiH,EAAa,EAAbA,cAEA,ECxBqB,WACrB,OAAkC5G,EAAAA,EAAAA,WAAS,GAAM,eAA1C6G,EAAS,KAAEC,EAAY,MAE9BC,EAAAA,EAAAA,YAAU,WACR,OAAkB,IAAdF,EACKG,OAAOC,iBAAiB,UAAWnH,IAG1B,IAAd+G,EACKG,OAAOE,oBAAoB,UAAWpH,QAD/C,CAGF,GAAG,CAAC+G,IAEJ,IAAM/G,EAAU,SAAC4B,GACf,GAAsB,KAAlBA,EAAMyF,QAMV,MAA+B,sBAA3BzF,EAAM0F,cAAcxH,GACfkH,GAAa,QADtB,EALEA,GAAa,EAUjB,EAEA,MAAO,CAACD,EAAWC,EACrB,CDJoCO,GAAqB,eAAhDR,EAAS,KAAEC,EAAY,KAC9B,GAAwC9G,EAAAA,EAAAA,UAAS,GAAE,eAA5CsH,EAAY,KAAEC,EAAe,KACpC,EE1B0B,WAC1B,OAAsCvH,EAAAA,EAAAA,WAAS,GAAM,eAA9CwH,EAAW,KAAEC,EAAc,MAElCV,EAAAA,EAAAA,YAAU,WACR,OAAoB,IAAhBS,EACKR,OAAOC,iBAAiB,UAAWnH,IAGxB,IAAhB0H,EACKR,OAAOE,oBAAoB,UAAWpH,QAD/C,CAGF,GAAG,CAAC0H,IAEJ,IAAM1H,EAAU,SAAC4B,GACf,GAAsB,KAAlBA,EAAMyF,QAKV,MAA+B,qBAA3BzF,EAAM0F,cAAcxH,GACf6H,GAAe,QADxB,EAJEA,GAAe,EASnB,EAEA,MAAO,CAACD,EAAaC,EACvB,CFDwCC,GAA0B,eAAzDF,EAAW,KAAEC,EAAc,KAClC,GAAgCzH,EAAAA,EAAAA,WAAS,GAAM,eAAxC2H,EAAQ,KAAEC,EAAW,KAEtBC,GAAeC,EAAAA,EAAAA,QAAO,OAE5Bf,EAAAA,EAAAA,YAAU,WACuB,aAK9B,OAL8B,0BAA/B,uFACMY,EAAS,CAAD,+BACJf,IAAgB,KAAD,kBACfgB,GAAY,GAAO,KAAD,uCAE3B,uBANc,WACgB,wBAO/BG,EACF,GAAG,CAACJ,KAMJZ,EAAAA,EAAAA,YAAU,WACR,IAAMiB,EAAWH,EAAaI,QAI9B,OAFAD,EAASf,iBAAiB,SAAUiB,GAE7B,WACLF,EAASd,oBAAoB,SAAUgB,EACzC,CACF,GAAG,IAEH,IAAMpI,EAAU,SAAC4B,GACf,MAA+B,qBAA3BA,EAAM0F,cAAcxH,GACf6H,GAAe,GAEO,sBAA3B/F,EAAM0F,cAAcxH,GACfkH,GAAa,QADtB,CAIF,EAeMoB,EAAe,SAAC3C,GAElBsC,EAAaI,QAAQE,cAClBN,EAAaI,QAAQG,UAAYpB,OAAOqB,aAC3C,KAEAT,GAAY,EAEhB,EAEA,OACE,gCACGJ,GACC,SAAC,GAAW,CAAC1H,QAASA,EAASC,MAAOuH,IACpC,KACHT,GAAY,SAAC,EAAK,CAAC9G,MAAOuH,EAAcxH,QAASA,IAAc,MAChE,gBAAKc,UAAWC,EAAgByH,OAAQzB,EAAU,UAChD,eAAIjG,UAAWC,EAAa0F,IAAKsB,EAAa,SAC3CrD,EAAYpD,KAAI,SAACC,EAAItB,GAAK,OACzB,gBAEEa,UAAWC,EACXY,QAAS,SAACC,GAAK,OAnCH,SAAC6D,EAAGxF,GAED,SAAvBwF,EAAEoB,OAAO4B,WACc,QAAvBhD,EAAEoB,OAAO4B,WACc,UAAvBhD,EAAEoB,OAAO4B,WACc,WAAvBhD,EAAEoB,OAAO4B,YAIXhB,EAAgBxH,GAChB+G,GAAa,GACf,CAwBgC0B,CAAgB9G,EAAO3B,EAAU,EAAC,WAEtD,gBACE8B,IAAKR,EAAGE,OAAOkH,MAAM3G,IACrBC,MAAOV,EAAGE,OAAOkH,MAAM1G,MACvBC,OAAQX,EAAGE,OAAOkH,MAAMzG,OACxBC,IAAKZ,EAAGa,YACRtB,UAAWC,KAEb,iBAAKD,UAAWC,EAAQ,WACtB,eAAID,UAAWC,EAAK,SAAEQ,EAAGa,eACzB,eAAGtB,UAAWC,EAAW,UAAEsC,KAAKC,MAAM/B,EAAGgC,UAAS,gBAEpD,iBAAKzC,UAAWC,EAAW,WACzB,kBACET,KAAK,WACLR,GAAG,QACHgC,KAAK,QACLhB,UAAWC,EACXY,QAAS,SAACC,GAER,OADAS,QAAQC,IAAI,WAAYV,GACpBL,EAAGgB,MACE1C,EAAmB,CAAE2C,IAAKjB,EAAGiB,MAE/B9C,EAAoB,CAAE8C,IAAKjB,EAAGiB,KACvC,KAEF,kBACEC,QAAQ,QACR3B,UAAS,UAAKC,EAAO,YAAIQ,EAAGgB,MAAQxB,EAAU,MAAO,UAErD,SAACc,EAAA,EAAY,CAACC,KAAK,qBAGvB,mBACEhB,UAAWC,EACXe,KAAK,kBACLxB,KAAK,SACLqB,QAAS,WACP8F,EAAgBxH,GAChB0H,GAAe,EACjB,EAAE,UAEF,SAAC9F,EAAA,EAAY,CAACC,KAAK,wBA7ChBmB,EAAAA,EAAAA,MA+CF,UAMjB,G,4JGzIA2F,EAAAA,EAAAA,SAAAA,QAAyB,+CAEzB,IAAM7E,EAAkB,CACtBC,KAAM,0BACNlD,UAAW,UACXmD,aAAa,EACb4E,UAAW,IACX1E,MAAO,CACLC,WAAY,6BAIV0E,EACD,SAACA,GACFF,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAA2C,iBAAaE,EAC1D,EAQInE,EAAe,SAAChF,GAAI,OAAK,SAACF,EAAUsJ,GACxC,IACiBC,EACbD,IADFE,KAAQH,MAGV,GAAKE,EAOL,OAHAF,EAAUE,GACVvJ,GAASyJ,EAAAA,EAAAA,OAEFN,EAAAA,EAAAA,KACC,mBAAoBjJ,GACzBwJ,MAAK,YAAe,IAAZxJ,EAAI,EAAJA,KAGP,OAFAF,GAAS2J,EAAAA,EAAAA,IAAoBzJ,IAC7B2F,IAASvB,GAAiBwB,YACnB9F,EAAS2J,EAAAA,GAClB,IACCC,OAAM,SAACC,GAAK,OAAKjH,QAAQC,IAAIgH,EAAM,GACxC,CAAE,EAIIC,EAAoB,SAAC5J,GAAI,OAAK,SAACF,EAAUsJ,GAC7C,IACiBC,EACbD,IADFE,KAAQH,MAGLE,IAILF,EAAUE,GAEVvJ,GAAS+J,EAAAA,EAAAA,OACTZ,EAAAA,EAAAA,OACU,sBAAuB,CAAEjJ,KAAMA,IACtCwJ,MAAK,gBAAGxJ,EAAI,EAAJA,KAAI,OAAOF,GAASgK,EAAAA,EAAAA,IAAyB9J,GAAM,IAC3D0J,OAAM,SAACC,GAAK,OAAKjH,QAAQC,IAAIgH,EAAM,IACxC,CAAE,EAIII,EAAe,WAAH,OAAS,SAACjK,EAAUsJ,GACpC,IACiBC,EACbD,IADFE,KAAQH,MAGV,GAAKE,EAOL,OAHAF,EAAUE,GACVvJ,EAASkK,EAAAA,IAEFf,EAAAA,EAAAA,IACA,2BACJO,MAAK,YAAe,IAAZxJ,EAAI,EAAJA,KACPF,GAASmK,EAAAA,EAAAA,IAAoBjK,GAC/B,IACC0J,OAAM,SAACC,GAAK,OAAKjH,QAAQC,IAAI,WAAYgH,EAAM,GACpD,CAAE,C,mJCxFIvF,G,QAAkB,CACtBC,KAAM,wCACNlD,UAAW,QACXmD,aAAa,EACb4E,UAAW,IACX1E,MAAO,CACLC,WAAY,8BAIhBwE,EAAAA,EAAAA,SAAAA,QAAyB,+CAEzB,IAAME,EACD,SAACA,GACFF,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAA2C,iBAAaE,EAC1D,EAQIlJ,EAAgB,SAACD,GAAI,OAAK,SAACF,EAAUsJ,GACzC,IACiBC,EACbD,IADFE,KAAQH,MAGV,GAAKE,EASL,OALAF,EAAUE,GAEV3G,QAAQC,IAAI,eAAgB3C,GAC5BF,GAASoK,EAAAA,EAAAA,OAEFjB,EAAAA,EAAAA,KACC,0BAA2BjJ,GAChCwJ,MAAK,YAAe,IAAZxJ,EAAI,EAAJA,KACPF,GAASqK,EAAAA,EAAAA,IAAqBnK,GAChC,IACC0J,OAAM,SAACC,GAAK,OAAKhE,IAASvB,GAAiBwB,WAAW,GAC3D,CAAE,EAIIxF,EACJ,SADsB,OACnByC,EAAG,EAAHA,IAAG,OACN,SAAC/C,EAAUsJ,GACT,IACiBC,EACbD,IADFE,KAAQH,MAGLE,IAILF,EAAUE,GAEVvJ,GAASsK,EAAAA,EAAAA,OACTnB,EAAAA,EAAAA,OACU,uBAAwB,CAAEjJ,KAAM,CAAE6C,IAAKA,KAC9C2G,MAAK,gBAAGxJ,EAAI,EAAJA,KAAI,OAAOF,GAASuK,EAAAA,EAAAA,IAA0BrK,GAAM,IAC5D0J,OAAM,SAACC,GAAK,OAAKjH,QAAQC,IAAIgH,EAAM,IACxC,CAAE,EAIEW,EAAgB,WAAH,OAAS,SAACxK,EAAUsJ,GACrC,IACiBC,EACbD,IADFE,KAAQH,MAGV,GAAKE,EAOL,OAHAF,EAAUE,GACVvJ,EAASyK,EAAAA,IAEFtB,EAAAA,EAAAA,IACA,aACJO,MAAK,YAAe,IAAZxJ,EAAI,EAAJA,KACPF,GAAS0K,EAAAA,EAAAA,IAAqBxK,GAChC,IACC0J,OAAM,SAACC,GAAK,OAAKjH,QAAQC,IAAI,WAAYgH,EAAM,GACpD,CAAE,C","sources":["webpack://nutrition/./src/components/recipes/recipesList/_recipesList.module.scss?ac3b","webpack://nutrition/./src/components/modalWindow/_modal.module.scss?26a2","components/modalWindow/Modal.js","components/plannerForm/labels.js","webpack://nutrition/./src/components/plannerForm/_plannerForm.module.scss?12ab","components/plannerForm/PlannerForm.js","components/recipes/recipesList/RecipesList.js","hooks/useToggleModal.js","hooks/useTogglePlanerForm.js","redux/planner/planner-operations.js","redux/wishList/wishList-operations.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardsListBox\":\"_recipesList_cardsListBox__zhn-s\",\"cardsList\":\"_recipesList_cardsList__RkbzL\",\"card\":\"_recipesList_card__T-M9i\",\"thumb\":\"_recipesList_thumb__9wLxc\",\"h3\":\"_recipesList_h3__eGpkn\",\"calories\":\"_recipesList_calories__SMqkO\",\"image\":\"_recipesList_image__ezuhr\",\"calendarBtn\":\"_recipesList_calendarBtn__cQ6Ae\",\"checkbox\":\"_recipesList_checkbox__7Fypt\",\"label\":\"_recipesList_label__XIMB3\",\"liked\":\"_recipesList_liked__7SZUp\",\"checkbox__input\":\"_recipesList_checkbox__input__CoaIy\"};","// extracted by mini-css-extract-plugin\nexport default {\"buttonClose\":\"_modal_buttonClose__IRXzw\",\"swiper\":\"_modal_swiper__69tSG\",\"slide\":\"_modal_slide__SJZ+2\",\"image\":\"_modal_image__WVhky\",\"card__content\":\"_modal_card__content__gGjKH\",\"buttonsBox\":\"_modal_buttonsBox__BOUrS\",\"buttonsBox__btn\":\"_modal_buttonsBox__btn__tawpm\",\"spanBox\":\"_modal_spanBox__lddcf\",\"h3\":\"_modal_h3__43XXq\",\"h4\":\"_modal_h4__baKms\",\"ingredients_list\":\"_modal_ingredients_list__FkYF1\",\"nutrients_list\":\"_modal_nutrients_list__eneVi\",\"ingredientsList__item\":\"_modal_ingredientsList__item__eKANl\",\"nutrientsList__item\":\"_modal_nutrientsList__item__OZGTD\",\"labels_list\":\"_modal_labels_list__p+q9S\",\"labelsList__item\":\"_modal_labelsList__item__VkErk\",\"sourceLink\":\"_modal_sourceLink__lStzX\",\"checkbox\":\"_modal_checkbox__vtzPk\",\"label\":\"_modal_label__uIhqZ\",\"liked\":\"_modal_liked__qSxMg\",\"checkbox__input\":\"_modal_checkbox__input__hfU3n\"};","import { connect } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport { Navigation, Pagination, Keyboard } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.min.css';\r\nimport 'swiper/css/keyboard';\r\nimport 'swiper/css/bundle';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport s from './_modal.module.scss';\r\n\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishList,\r\n} from '../../redux/wishList/wishList-operations';\r\nimport { getRecipesList } from '../../redux/recipes/recipes-selectors';\r\n\r\nimport SvgGenerator from '../svgGenerator/SvgGenerator';\r\n\r\nfunction Modal({\r\n  onClose,\r\n  recipes,\r\n  index,\r\n  addRecipeToWishList,\r\n  deleteFromWishlist,\r\n}) {\r\n  const [nutrientsToggle, setNutrientsToggle] = useState(false);\r\n\r\n  return (\r\n    <Swiper\r\n      pagination={{\r\n        type: 'fraction',\r\n      }}\r\n      navigation={true}\r\n      rewind={true}\r\n      modules={[Pagination, Navigation, Keyboard]}\r\n      effect=\"fade\"\r\n      className={s.swiper}\r\n      keyboard={{\r\n        enabled: true,\r\n        onlyInViewport: false,\r\n        pageUpDown: true,\r\n      }}\r\n      initialSlide={index}\r\n      hideonclick=\"true\"\r\n    >\r\n      {recipes.map((el) => {\r\n        let imageRegular = el.images.REGULAR;\r\n        return (\r\n          <SwiperSlide key={nanoid()}>\r\n            <div className={s.slide} id={'slide'}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={(event) => onClose(event)}\r\n                id=\"closeModal-button\"\r\n                className={s.buttonClose}\r\n              >\r\n                <SvgGenerator name=\"icon__close\" />\r\n              </button>\r\n              <img\r\n                src={imageRegular.url}\r\n                width={imageRegular.width}\r\n                height={imageRegular.height}\r\n                alt={el.recipeLabel}\r\n                className={s.image}\r\n              />\r\n              <div className={s.card__content}>\r\n                <div className={s.checkbox}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"liked\"\r\n                    name=\"liked\"\r\n                    className={`${s.checkbox__input} `}\r\n                    onClick={(event) => {\r\n                      console.log('event>>>', event);\r\n                      if (el.liked) {\r\n                        return deleteFromWishlist({ uri: el.uri });\r\n                      }\r\n                      return addRecipeToWishList({ uri: el.uri });\r\n                    }}\r\n                  ></input>\r\n                  <label\r\n                    htmlFor=\"liked\"\r\n                    className={`${s.label}  ${el.liked ? s.liked : null}`}\r\n                  >\r\n                    <SvgGenerator name=\"icon__like\" />\r\n                  </label>\r\n                </div>\r\n\r\n                <h3 className={s.h3}>{el.recipeLabel}</h3>\r\n                <h4 className={s.h4}>\r\n                  {nutrientsToggle ? 'Nutrients:' : 'Ingredients:'}\r\n                </h4>\r\n                {nutrientsToggle ? (\r\n                  <>\r\n                    <ul className={s.nutrients_list}>\r\n                      {el.totalNutrients.map((item) => (\r\n                        <li className={s.nutrientsList__item} key={nanoid()}>\r\n                          <span>{item.label}</span>\r\n                          <span>\r\n                            {Number(item.quantity).toFixed(0)} {item.unit}\r\n                          </span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n\r\n                    <ul className={s.labels_list}>\r\n                      {[...el.dietLabels, ...el.healthLabels].map((label) => (\r\n                        <li className={s.labelsList__item} key={label}>\r\n                          {label}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </>\r\n                ) : (\r\n                  <ul className={s.ingredients_list}>\r\n                    {el.ingredientList.map((item) => (\r\n                      <li className={s.ingredientsList__item} key={nanoid()}>\r\n                        {item}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n\r\n              <div className={s.spanBox}>\r\n                <span>{`${Math.round(el.calories)} kcal.`}</span>\r\n                <span>{`${Math.round(el.totalWeight)} g.`}</span>\r\n                <span>{`${el.cuisineType} cuisine`}</span>\r\n                {el.totalTime !== 0 ? (\r\n                  <span>{`${el.totalTime} min.`}</span>\r\n                ) : null}\r\n              </div>\r\n\r\n              <div className={s.buttonsBox}>\r\n                <button\r\n                  type=\"button\"\r\n                  className={s.buttonsBox__btn}\r\n                  onClick={() => setNutrientsToggle(!nutrientsToggle)}\r\n                >\r\n                  {nutrientsToggle ? 'Show ingredients' : 'Show nutrients'}\r\n                </button>\r\n                <a href={el.sourceUrl} className={s.sourceLink}>\r\n                  Source: {el.source}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  recipes: getRecipesList(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addRecipeToWishList: (data) => {\r\n    return dispatch(addToWishlist(data));\r\n  },\r\n  deleteFromWishlist: (id) => {\r\n    return dispatch(deleteFromWishList(id));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","const mealLabel = ['Breakfast', 'Lunch', 'Dinner', 'Snack', 'Teatime'];\r\n\r\nexport { mealLabel };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalWindow\":\"_plannerForm_modalWindow__IoObN\",\"swiper\":\"_plannerForm_swiper__z8ccs\",\"form\":\"_plannerForm_form__dgK-d\",\"box\":\"_plannerForm_box__jeFS5\",\"dateBox\":\"_plannerForm_dateBox__xeO4T\",\"mealBox\":\"_plannerForm_mealBox__4D+MH\",\"label\":\"_plannerForm_label__9ano4\",\"dateInput\":\"_plannerForm_dateInput__PoxnP\",\"dropdownMenu\":\"_plannerForm_dropdownMenu__PJTEC\",\"select\":\"_plannerForm_select__32xDq\",\"option\":\"_plannerForm_option__ythXH\",\"date\":\"_plannerForm_date__qr1vC\",\"box1\":\"_plannerForm_box1__OIjWo\",\"buttonClose\":\"_plannerForm_buttonClose__z7QLs\",\"button_submit\":\"_plannerForm_button_submit__G3Jvs\"};","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.min.css';\r\nimport 'swiper/css/keyboard';\r\nimport 'swiper/css/bundle';\r\nimport { mealLabel } from './labels';\r\nimport { fadeIn, fadeOut } from 'react-animations';\r\nimport { StyleSheet, css } from 'aphrodite';\r\n\r\nimport SvgGenerator from '../svgGenerator/SvgGenerator';\r\n\r\nimport { getRecipesList } from '../../redux/recipes/recipes-selectors';\r\nimport { addToPlanner } from '../../redux/planner/planner-operations';\r\n\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { Box } from '@mui/system';\r\n\r\nimport s from './_plannerForm.module.scss';\r\n\r\nimport moment from 'moment';\r\n\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst toastifyOptions = {\r\n  text: 'You forgot to choose meal type or date',\r\n  className: 'info',\r\n  stopOnFocus: true,\r\n  duration: 3000,\r\n  style: {\r\n    background: 'rgba(154, 22, 46, 0.725)',\r\n  },\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  fadeIn: {\r\n    animationName: fadeIn,\r\n    animationDuration: '3s',\r\n  },\r\n  fadeOut: {\r\n    animationName: fadeOut,\r\n    animationDuration: '3s',\r\n  },\r\n});\r\n\r\nfunction PlannerForm({ onClose, addToPlanner, index, recipesList }) {\r\n  const [date, setDate] = useState('');\r\n  const [meal, setMeal] = useState(['Choose meal']);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (meal[0] === 'Choose meal') {\r\n      Toastify(toastifyOptions).showToast();\r\n      return;\r\n    }\r\n\r\n    if (date === '') {\r\n      Toastify(toastifyOptions).showToast();\r\n      return;\r\n    }\r\n\r\n    let formattedDate = moment(date).format('LL');\r\n\r\n    addToPlanner({\r\n      uri: recipesList[index].uri,\r\n      date: formattedDate,\r\n      meal: meal[0],\r\n      recipe: recipesList[index],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Swiper className={s.swiper}>\r\n      <SwiperSlide>\r\n        <div className={s.modalWindow}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={(event) => onClose(event)}\r\n            id=\"closeForm-button\"\r\n            className={s.buttonClose}\r\n          >\r\n            <SvgGenerator name=\"icon__close\" />\r\n          </button>\r\n          <form className={s.form} onSubmit={(e) => handleSubmit(e)}>\r\n            <div className={s.dateBox}>\r\n              <label htmlFor=\"date\" className={s.label}>\r\n                Date:\r\n              </label>\r\n\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <Box className={s.box1}>\r\n                  <DatePicker\r\n                    label=\"Custom input\"\r\n                    value={date}\r\n                    onChange={(newValue) => {\r\n                      setDate(newValue);\r\n                    }}\r\n                    className={s.datePicker}\r\n                    renderInput={({ inputRef, inputProps, InputProps }) => (\r\n                      <Box\r\n                        className={s.date}\r\n                        sx={{\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                        }}\r\n                      >\r\n                        <input\r\n                          ref={inputRef}\r\n                          {...inputProps}\r\n                          className={s.dateInput}\r\n                          required\r\n                          id=\"date\"\r\n                        />\r\n                        {InputProps?.endAdornment}\r\n                      </Box>\r\n                    )}\r\n                  />\r\n                </Box>\r\n              </LocalizationProvider>\r\n            </div>\r\n\r\n            <div className={s.mealBox}>\r\n              <label htmlFor=\"meal\" className={s.label}>\r\n                Meal:\r\n              </label>\r\n              <div className={s.dropdownMenu}>\r\n                <h3 className={s.menuTitle}>{meal}</h3>\r\n                <select\r\n                  multiple\r\n                  value={meal}\r\n                  name=\"meal\"\r\n                  id=\"meal\"\r\n                  onChange={(event) => setMeal([event.target.value])}\r\n                  className={s.select}\r\n                >\r\n                  {mealLabel.map((el) => (\r\n                    <option className={s.option} key={el} name={el} value={el}>\r\n                      {el}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={(e) => handleSubmit(e)}\r\n              className={s.button_submit}\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </SwiperSlide>\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  recipesList: getRecipesList(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addToPlanner: (data) => {\r\n    return dispatch(addToPlanner(data));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlannerForm);\r\n","import s from './_recipesList.module.scss';\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getRecipesList } from '../../../redux/recipes/recipes-selectors';\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishList,\r\n} from '../../../redux/wishList/wishList-operations';\r\nimport { fetchNextPage } from '../../../redux/recipes/recipes-operations';\r\n\r\nimport { useToggleModal } from '../../../hooks/useToggleModal';\r\nimport { useTogglePlanerForm } from '../../../hooks/useTogglePlanerForm';\r\n\r\nimport Modal from '../../modalWindow/Modal';\r\nimport SvgGenerator from '../../svgGenerator/SvgGenerator';\r\nimport PlannerForm from '../../plannerForm/PlannerForm';\r\n\r\nfunction RecipesList({\r\n  recipesList,\r\n  addRecipeToWishList,\r\n  deleteFromWishlist,\r\n  fetchNextPage,\r\n}) {\r\n  const [modalOpen, setModalOpen] = useToggleModal(false);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [plannerForm, setPlannerForm] = useTogglePlanerForm(false);\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  const cardsListRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchingNextPage() {\r\n      if (fetching) {\r\n        await fetchNextPage();\r\n        await setFetching(false);\r\n      }\r\n    }\r\n\r\n    fetchingNextPage();\r\n  }, [fetching]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log('recipes list has changed');\r\n  // }, [recipesList]);\r\n\r\n  useEffect(() => {\r\n    const listNode = cardsListRef.current;\r\n\r\n    listNode.addEventListener('scroll', handleScroll);\r\n\r\n    return function () {\r\n      listNode.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const onClose = (event) => {\r\n    if (event.currentTarget.id === 'closeForm-button') {\r\n      return setPlannerForm(false);\r\n    }\r\n    if (event.currentTarget.id === 'closeModal-button') {\r\n      return setModalOpen(false);\r\n    }\r\n    return;\r\n  };\r\n\r\n  const handleCardClick = (e, index) => {\r\n    if (\r\n      e.target.localName === 'path' ||\r\n      e.target.localName === 'svg' ||\r\n      e.target.localName === 'input' ||\r\n      e.target.localName === 'button'\r\n    ) {\r\n      return;\r\n    }\r\n    setCurrentIndex(index);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleScroll = (e) => {\r\n    if (\r\n      cardsListRef.current.scrollHeight -\r\n        (cardsListRef.current.scrollTop + window.innerHeight) <\r\n      100\r\n    ) {\r\n      setFetching(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {plannerForm ? (\r\n        <PlannerForm onClose={onClose} index={currentIndex} />\r\n      ) : null}\r\n      {modalOpen ? <Modal index={currentIndex} onClose={onClose} /> : null}\r\n      <div className={s.cardsListBox} hidden={modalOpen}>\r\n        <ul className={s.cardsList} ref={cardsListRef}>\r\n          {recipesList.map((el, index) => (\r\n            <li\r\n              key={nanoid()}\r\n              className={s.card}\r\n              onClick={(event) => handleCardClick(event, index, el)}\r\n            >\r\n              <img\r\n                src={el.images.SMALL.url}\r\n                width={el.images.SMALL.width}\r\n                height={el.images.SMALL.height}\r\n                alt={el.recipeLabel}\r\n                className={s.image}\r\n              />\r\n              <div className={s.thumb}>\r\n                <h3 className={s.h3}>{el.recipeLabel}</h3>\r\n                <p className={s.calories}>{Math.round(el.calories)} kcal.</p>\r\n              </div>\r\n              <div className={s.checkbox}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"liked\"\r\n                  name=\"liked\"\r\n                  className={s.checkbox__input}\r\n                  onClick={(event) => {\r\n                    console.log('event>>>', event);\r\n                    if (el.liked) {\r\n                      return deleteFromWishlist({ uri: el.uri });\r\n                    }\r\n                    return addRecipeToWishList({ uri: el.uri });\r\n                  }}\r\n                />\r\n                <label\r\n                  htmlFor=\"liked\"\r\n                  className={`${s.label} ${el.liked ? s.liked : null}`}\r\n                >\r\n                  <SvgGenerator name=\"icon__like\" />\r\n                </label>\r\n              </div>\r\n              <button\r\n                className={s.calendarBtn}\r\n                name=\"calendar-button\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurrentIndex(index);\r\n                  setPlannerForm(true);\r\n                }}\r\n              >\r\n                <SvgGenerator name=\"icon__calendar\" />\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  recipesList: getRecipesList(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addRecipeToWishList: (data) => {\r\n    return dispatch(addToWishlist(data));\r\n  },\r\n  deleteFromWishlist: (id) => {\r\n    return dispatch(deleteFromWishList(id));\r\n  },\r\n  fetchNextPage: () => {\r\n    return dispatch(fetchNextPage());\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipesList);\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useToggleModal = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (modalOpen === true) {\r\n      return window.addEventListener('keydown', onClose);\r\n    }\r\n\r\n    if (modalOpen === false) {\r\n      return window.removeEventListener('keydown', onClose);\r\n    }\r\n  }, [modalOpen]);\r\n\r\n  const onClose = (event) => {\r\n    if (event.keyCode === 27) {\r\n      setModalOpen(false);\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.currentTarget.id === 'closeModal-button') {\r\n      return setModalOpen(false);\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  return [modalOpen, setModalOpen];\r\n};\r\n\r\nexport { useToggleModal };\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useTogglePlanerForm = () => {\r\n  const [plannerForm, setPlannerForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (plannerForm === true) {\r\n      return window.addEventListener('keydown', onClose);\r\n    }\r\n\r\n    if (plannerForm === false) {\r\n      return window.removeEventListener('keydown', onClose);\r\n    }\r\n  }, [plannerForm]);\r\n\r\n  const onClose = (event) => {\r\n    if (event.keyCode === 27) {\r\n      setPlannerForm(false);\r\n      return;\r\n    }\r\n\r\n    if (event.currentTarget.id === 'closeForm-button') {\r\n      return setPlannerForm(false);\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  return [plannerForm, setPlannerForm];\r\n};\r\n\r\nexport { useTogglePlanerForm };\r\n","import axios from 'axios';\r\n\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nimport {\r\n  addToPlannerRequest,\r\n  addToPlannerSuccess,\r\n  // addToPlannerError,\r\n  fetchPlannerRequest,\r\n  fetchPlannerSuccess,\r\n  // fetchPlannerError,\r\n  removeFromPlannerRequest,\r\n  removeFromPlannerSuccess,\r\n  //removeFromPlannerError,\r\n} from './planner-actions';\r\n\r\naxios.defaults.baseURL = 'https://nutritionapp-1-t7373772.deta.app/api';\r\n\r\nconst toastifyOptions = {\r\n  text: 'Recipe added to planner',\r\n  className: 'success',\r\n  stopOnFocus: true,\r\n  autoClose: 5000,\r\n  style: {\r\n    background: 'rgba(154, 22, 46, 0.725)',\r\n  },\r\n};\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n//.....................................................................\r\n\r\nconst addToPlanner = (data) => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(addToPlannerRequest());\r\n\r\n  return axios\r\n    .post('/planner/addItem', data)\r\n    .then(({ data }) => {\r\n      dispatch(addToPlannerSuccess(data));\r\n      Toastify(toastifyOptions).showToast();\r\n      return dispatch(addToPlannerSuccess);\r\n    })\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\n//.....................................................................\r\n\r\nconst removeFromPlanner = (data) => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(removeFromPlannerRequest());\r\n  axios\r\n    .delete(`/planner/removeItem`, { data: data })\r\n    .then(({ data }) => dispatch(removeFromPlannerSuccess(data)))\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\n//.....................................................................\r\n\r\nconst fetchPlanner = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(fetchPlannerRequest);\r\n\r\n  return axios\r\n    .get('/planner/getPlannerList')\r\n    .then(({ data }) => {\r\n      dispatch(fetchPlannerSuccess(data));\r\n    })\r\n    .catch((error) => console.log('Error>>>', error));\r\n};\r\n\r\nexport { addToPlanner, fetchPlanner, removeFromPlanner };\r\n","import axios from 'axios';\r\nimport {\r\n  addToWishlistRequest,\r\n  addToWishlistSuccess,\r\n  fetchWishlistRequest,\r\n  fetchWishlistSuccess,\r\n  // addToWishlistError,\r\n  removeFromWishlistRequest,\r\n  removeFromWishlistSuccess,\r\n} from './wishList-actions';\r\n\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst toastifyOptions = {\r\n  text: 'The recipe is already on the wishlist',\r\n  className: 'error',\r\n  stopOnFocus: true,\r\n  autoClose: 5000,\r\n  style: {\r\n    background: 'rgba(154, 22, 46, 0.725)',\r\n  },\r\n};\r\n\r\naxios.defaults.baseURL = 'https://nutritionapp-1-t7373772.deta.app/api';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n//.....................................................................\r\n\r\nconst addToWishlist = (data) => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  console.log('Request body', data);\r\n  dispatch(addToWishlistRequest());\r\n\r\n  return axios\r\n    .post('/wishlist/addtowishlist', data)\r\n    .then(({ data }) => {\r\n      dispatch(addToWishlistSuccess(data));\r\n    })\r\n    .catch((error) => Toastify(toastifyOptions).showToast());\r\n};\r\n\r\n//.....................................................................\r\n\r\nconst deleteFromWishList =\r\n  ({ uri }) =>\r\n  (dispatch, getState) => {\r\n    const {\r\n      auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n      return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n\r\n    dispatch(removeFromWishlistRequest());\r\n    axios\r\n      .delete(`/wishlist/removeItem`, { data: { uri: uri } })\r\n      .then(({ data }) => dispatch(removeFromWishlistSuccess(data)))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n//.....................................................................\r\n\r\nconst fetchWishlist = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(fetchWishlistRequest);\r\n\r\n  return axios\r\n    .get('/wishlist')\r\n    .then(({ data }) => {\r\n      dispatch(fetchWishlistSuccess(data));\r\n    })\r\n    .catch((error) => console.log('Error>>>', error));\r\n};\r\n\r\nexport { addToWishlist, fetchWishlist, deleteFromWishList };\r\n"],"names":["connect","state","recipes","getRecipesList","dispatch","addRecipeToWishList","data","addToWishlist","deleteFromWishlist","id","deleteFromWishList","onClose","index","useState","nutrientsToggle","setNutrientsToggle","pagination","type","navigation","rewind","modules","Pagination","Navigation","Keyboard","effect","className","s","keyboard","enabled","onlyInViewport","pageUpDown","initialSlide","hideonclick","map","el","imageRegular","images","REGULAR","onClick","event","SvgGenerator","name","src","url","width","height","alt","recipeLabel","console","log","liked","uri","htmlFor","totalNutrients","item","label","Number","quantity","toFixed","unit","nanoid","dietLabels","healthLabels","ingredientList","Math","round","calories","totalWeight","cuisineType","totalTime","href","sourceUrl","source","mealLabel","toastifyOptions","text","stopOnFocus","duration","style","background","StyleSheet","fadeIn","animationName","animationDuration","fadeOut","recipesList","addToPlanner","date","setDate","meal","setMeal","handleSubmit","preventDefault","formattedDate","moment","format","recipe","Toastify","showToast","onSubmit","e","LocalizationProvider","dateAdapter","AdapterDateFns","Box","DatePicker","value","onChange","newValue","renderInput","inputRef","inputProps","InputProps","sx","display","alignItems","ref","required","endAdornment","multiple","target","fetchNextPage","modalOpen","setModalOpen","useEffect","window","addEventListener","removeEventListener","keyCode","currentTarget","useToggleModal","currentIndex","setCurrentIndex","plannerForm","setPlannerForm","useTogglePlanerForm","fetching","setFetching","cardsListRef","useRef","fetchingNextPage","listNode","current","handleScroll","scrollHeight","scrollTop","innerHeight","hidden","localName","handleCardClick","SMALL","axios","autoClose","token","getState","persistedToken","auth","addToPlannerRequest","then","addToPlannerSuccess","catch","error","removeFromPlanner","removeFromPlannerRequest","removeFromPlannerSuccess","fetchPlanner","fetchPlannerRequest","fetchPlannerSuccess","addToWishlistRequest","addToWishlistSuccess","removeFromWishlistRequest","removeFromWishlistSuccess","fetchWishlist","fetchWishlistRequest","fetchWishlistSuccess"],"sourceRoot":""}